package ru.job4j.domain;

import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;

import javax.persistence.*;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Set;

/**
 * the web-site entity.
 */
@Entity
public class WebSite implements UserDetails {

    /**
     * the domain.
     */
    @Id
    private String domain;

    /**
     * the unique autogenerated login.
     */
    @Column(unique = true, nullable = false)
    private String login;

    /**
     * the unique autogenerated password.
     */
    @Column(nullable = false)
    private String password;

    /**
     * the set of the links tied to the domain.
     */
    @OneToMany(mappedBy = "webSite", orphanRemoval = true, cascade = {CascadeType.PERSIST, CascadeType.MERGE})
    private Set<Link> links;

    public WebSite() {
    }

    public WebSite(String domain) {
        this.domain = domain;
    }

    public WebSite(String domain, String login, String password) {
        this.domain = domain;
        this.login = login;
        this.password = password;
    }

    @Override
    public Collection<? extends GrantedAuthority> getAuthorities() {
        return new ArrayList<>();
    }

    @Override
    public String getUsername() {
        return getLogin();
    }

    @Override
    public boolean isAccountNonExpired() {
        return true;
    }

    @Override
    public boolean isAccountNonLocked() {
        return true;
    }

    @Override
    public boolean isCredentialsNonExpired() {
        return true;
    }

    @Override
    public boolean isEnabled() {
        return true;
    }

    public String getDomain() {
        return domain;
    }

    public void setDomain(String name) {
        this.domain = name;
    }

    public String getLogin() {
        return login;
    }

    public void setLogin(String login) {
        this.login = login;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }

    public Set<Link> getLinks() {
        return links;
    }

    public void setLinks(Set<Link> links) {
        this.links = links;
    }
}
